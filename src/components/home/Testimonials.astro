---
const testimonials = [
  {
    id: 1,
    quote: "Our voices have been systematically ignored. It's time for transparency in how decisions affecting our daily lives are made.",
    author: "Local Resident",
    area: "Town Centre"
  },
  {
    id: 2,
    quote: "The data presented to justify these changes doesn't match what we experience daily. We demand to see the real numbers.",
    author: "Business Owner",
    area: "High Street"
  },
  {
    id: 3,
    quote: "We're not against progress, we're against decisions made without genuine community consultation and transparency.",
    author: "Community Member",
    area: "Residential Area"
  }
];
---

<section class="testimonials-section">
  <div class="testimonials-container">
    <h2 class="section-title">Community Voices</h2>
    <p class="section-description">
      Real concerns from real residents. These are the voices that demand to be heard.
    </p>
    
    <div class="thought-bubbles">
      {testimonials.map((testimonial) => (
        <div class="thought-bubble" data-id={testimonial.id}>
          <blockquote class="bubble-quote">
            "{testimonial.quote}"
          </blockquote>
          <div class="bubble-author">
            <span class="author-name">{testimonial.author}</span>
            <span class="author-area">{testimonial.area}</span>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
.testimonials-section {
  padding: calc(var(--grid-unit) * 10) 0;
  background-color: var(--color-surface);
}

.testimonials-container {
  max-width: var(--max-width);
  margin: 0 auto;
  padding: 0 calc(var(--grid-unit) * 3);
}

.section-title {
  font-family: var(--font-heading-primary);
  font-size: 2.5rem;
  text-align: center;
  color: var(--color-accent);
  margin-bottom: calc(var(--grid-unit) * 2);
}

.section-description {
  text-align: center;
  font-size: 1.1rem;
  color: var(--color-text-secondary);
  margin-bottom: calc(var(--grid-unit) * 6);
  max-width: 600px;
  margin-left: auto;
  margin-right: auto;
}

.thought-bubbles {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: calc(var(--grid-unit) * 4);
  margin-top: calc(var(--grid-unit) * 6);
}

.thought-bubble {
  background-color: var(--color-background);
  padding: calc(var(--grid-unit) * 4);
  border-radius: 20px;
  position: relative;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
  transition: all 0.3s ease;
}

.thought-bubble:hover {
  transform: translateY(-4px);
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
}

.thought-bubble::before {
  content: "";
  position: absolute;
  bottom: -10px;
  left: 30px;
  width: 20px;
  height: 20px;
  background-color: var(--color-background);
  border-radius: 50%;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
}

.thought-bubble::after {
  content: "";
  position: absolute;
  bottom: -20px;
  left: 20px;
  width: 12px;
  height: 12px;
  background-color: var(--color-background);
  border-radius: 50%;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
}

.bubble-quote {
  font-family: var(--font-body);
  font-size: 1.1rem;
  line-height: 1.7;
  color: var(--color-text-primary);
  margin: 0 0 calc(var(--grid-unit) * 3) 0;
  font-style: italic;
}

.bubble-author {
  display: flex;
  flex-direction: column;
  gap: calc(var(--grid-unit) * 0.5);
  padding-top: calc(var(--grid-unit) * 2);
  border-top: 2px solid var(--color-accent);
}

.author-name {
  font-weight: 600;
  color: var(--color-text-primary);
  font-size: 1rem;
}

.author-area {
  font-size: 0.9rem;
  color: var(--color-text-muted);
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

/* Stagger animation on scroll */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.thought-bubble {
  opacity: 0;
  animation: fadeInUp 0.6s ease-out forwards;
}

.thought-bubble:nth-child(1) {
  animation-delay: 0.1s;
}

.thought-bubble:nth-child(2) {
  animation-delay: 0.2s;
}

.thought-bubble:nth-child(3) {
  animation-delay: 0.3s;
}

@media (max-width: 768px) {
  .thought-bubbles {
    grid-template-columns: 1fr;
    gap: calc(var(--grid-unit) * 3);
  }
  
  .thought-bubble {
    margin-bottom: calc(var(--grid-unit) * 3);
  }
}

/* Dark mode adjustments */
[data-theme="dark"] .thought-bubble {
  background-color: var(--color-surface);
}

[data-theme="dark"] .thought-bubble::before,
[data-theme="dark"] .thought-bubble::after {
  background-color: var(--color-surface);
}
</style>

<script>
  // Optional: Add intersection observer for scroll animations
  function initTestimonialAnimations() {
    const bubbles = document.querySelectorAll('.thought-bubble');
    
    if ('IntersectionObserver' in window) {
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            (entry.target as HTMLElement).style.animationPlayState = 'running';
          }
        });
      }, {
        threshold: 0.1
      });
      
      bubbles.forEach(bubble => {
        (bubble as HTMLElement).style.animationPlayState = 'paused';
        observer.observe(bubble);
      });
    }
  }
  
  document.addEventListener('DOMContentLoaded', initTestimonialAnimations);
</script>