Of course. Here is a set of instructions for an agentic AI to build the Swanage Traffic Alliance website by modifying the provided Astro.js template.

### **Project Goal**

To transform the "Volks-Typo" Astro.js blog theme into a new website for the "Swanage Traffic Alliance". This involves replacing the existing theme content with a new homepage and a "Feeds" page, drawing concepts, and where appropriate, copy and functionality from the old `nstcg.org` website files. The new site's focus is on holding the Swanage Town Council and Dorset Coast Forum accountable.

---

### **Phase 1: Project Setup and Rebranding**

**Objective:** Clean the starter template, remove demo content, and apply the new branding for the Swanage Traffic Alliance.

**Step 1.1: Clean Up Project**
- Delete all markdown and MDX files from `/src/content/blog/`.
- Delete the following unused page files from `/src/pages/`:
    - `about.astro`
    - `blog.astro`
    - `categories.astro`
    - `contact.astro`
    - `rss.xml.js`
    - `search.json.js`
- Delete the corresponding dynamic route directories:
    - `/src/pages/blog/`
    - `/src/pages/categories/`

**Step 1.2: Rebrand Configuration**
- Open `src/config.ts` and modify it to reflect the new organization's identity.

```typescript
// src/config.ts
export interface SiteConfig {
  title: string;
  description: string;
  author: {
    name: string;
    bio: string;
    avatar?: string;
  };
  social: {
    github?: string;
    twitter?: string;
    email?: string;
  };
  siteUrl: string;
}

export const config: SiteConfig = {
  title: "Swanage Traffic Alliance",
  description: "Holding Swanage Town Council and Dorset Coast Forum to account on the evidence that the democratic process has been warped for personal gain.",
  author: {
    name: "Swanage Traffic Alliance",
    bio: "A collective of concerned residents advocating for transparency and fairness in local traffic planning.",
  },
  social: {
    // Keep these empty for now, or add the new organization's links
    github: "",
    twitter: "",
    email: "contact@swanagetraffic.co.uk"
  },
  siteUrl: "https://www.swanagetraffic.co.uk"
};

export const SITE_TITLE = config.title;
export const SITE_DESCRIPTION = config.description;
```

**Step 1.3: Update Visual Branding**
- Replace `/public/favicon.svg` and `/public/site-title.svg` with new logos for the Swanage Traffic Alliance. For now, you can copy the `favicon.svg` from the old project. For the site title, create a simple SVG or modify the existing one to say "SWANAGE TRAFFIC ALLIANCE".
- Open `/src/styles/global.css`. Find the `--color-accent-red` variable and change its value to a strong blue to match the new branding identity, inspired by the old site's palette.

```css
/* src/styles/global.css */
:root {
  /* ... other variables ... */
  --color-accent-red: #3498db; /* Change this to a blue */
  /* ... */
}
/* Also rename it for clarity */
:root {
  /* ... */
  --color-accent: #3498db; /* New Accent Color */
  /* ... */
}

/* Update all instances of --color-accent-red to --color-accent */
```
- Search through all `.astro` and `.css` files in the `src` directory and replace any remaining hardcoded instances of `--color-accent-red` with `--color-accent`.

**Step 1.4: Update README**
- Open `README.md` and replace its content with a project description for the Swanage Traffic Alliance website.

---

### **Phase 2: Build the Homepage**

**Objective:** Recreate the key informational and engagement components from `nstcg.org/index.html` on the new Astro homepage.

**Step 2.1: Restructure the Homepage**
- Open `/src/pages/index.astro`.
- Remove the "Demo," "Features," "Typography Showcase," and "Installation" sections.
- Keep the "Hero" section, as it will be repurposed.

**Step 2.2: Create Homepage Components**
- Create a new directory: `/src/components/home/`.
- Based on `nstcg-website-phase-0/index.html` and its corresponding CSS/JS, create the following Astro components inside the new directory:

1.  **`Hero.astro`**:
    -   Copy the structure from the existing `index.astro`'s hero section.
    -   Update the text with the new accountability-focused messaging.
        -   **Title:** "DEMANDING ACCOUNTABILITY"
        -   **Subtitle:** "The Democratic Process Has Been Warped For Personal Gain"
        -   **Description:** "Evidence shows the Swanage Town Council and Dorset Coast Forum have pushed a traffic agenda against the community's will. We are holding them to account."
        -   Remove the buttons for now.

2.  **`ImpactMap.astro`**:
    -   Create the file `/src/components/home/ImpactMap.astro`.
    -   Copy the HTML structure from the `impact-map-section` in `nstcg-website-phase-0/index.html`.
    -   Copy the CSS from `nstcg-website-phase-0/css/components/impact-map.css` into the `<style>` block of the component.
    -   Copy the image assets (`impact_non_sat_height.webp` and `impact_non_sat_height_compressed.png`) from the old project into `/public/images/`.
    -   Adapt the JavaScript logic from `nstcg-website-phase-0/js/main.js` related to `initializeImpactMapToggle` and `loadImpactMap` into a `<script>` tag within the component. Ensure image paths are updated to `/images/`.

3.  **`CommunityCounter.astro`**:
    -   Create the file `/src/components/home/CommunityCounter.astro`.
    -   Copy the HTML from the `community-counter` section in `nstcg-website-phase-0/index.html`.
    -   Copy the CSS from `nstcg-website-phase-0/css/components/counter.css`.
    -   Add a client-side script that fetches the count from `/api/get-count` and updates the display. Use the logic from `nstcg-website-phase-0/js/modules/api.js` (`getParticipantCount`) and `nstcg-website-phase-0/js/components/counter.js`.

4.  **`Testimonials.astro`**:
    -   Create `/src/components/home/Testimonials.astro`.
    -   Copy the HTML from the `thought-bubbles-section` in `nstcg-website-phase-0/index.html`.
    -   Copy the CSS from `nstcg-website-phase-0/css/components/thought-bubbles.css`.
    -   This component will display static testimonials for now, reflecting community concerns about the perceived manipulation of the democratic process.
        -   *Testimonial 1:* "Our voices were systematically ignored. The consultation felt like a formality with a predetermined outcome."
        -   *Testimonial 2:* "It's shocking to see how data was presented to favor one option, while valid safety concerns from residents were dismissed."
        -   *Testimonial 3:* "This isn't about traffic anymore; it's about the integrity of our local government. We demand transparency."

**Step 2.3: Assemble the Homepage**
- In `/src/pages/index.astro`, import and arrange the new components within the `<Layout>` component, replacing the old content.

```astro
---
// src/pages/index.astro
import Layout from '../components/Layout.astro';
import Hero from '../components/home/Hero.astro';
import ImpactMap from '../components/home/ImpactMap.astro';
import CommunityCounter from '../components/home/CommunityCounter.astro';
import Testimonials from '../components/home/Testimonials.astro';
// ... any other components
---
<Layout title="Swanage Traffic Alliance" description="...">
  <Hero />
  <ImpactMap />
  <CommunityCounter />
  <Testimonials />
  <!-- Add other sections as needed -->
</Layout>
```

---

### **Phase 3: Build the Feeds Page**

**Objective:** Create a data-rich "Feeds" page that provides evidence and statistics to the community, based on `nstcg-website-phase-0/feeds.html`.

**Step 3.1: Create the Feeds Page File**
- Create a new file at `/src/pages/feeds.astro`.

**Step 3.2: Create Feeds Page Components**
- Create a new directory: `/src/components/feeds/`.
- Based on `nstcg-website-phase-0/feeds.html` and its JS/CSS, create the following components:

1.  **`FeedsHero.astro`**:
    -   Contains the page title and the statistics bar (Total Participants, Joined Today, This Week).
    -   Include a client-side script to fetch this data from an API endpoint (`/api/get-all-participants`).

2.  **`MomentumGraph.astro`**:
    -   This component will house the `<canvas>` for the Chart.js graph.
    -   Add `chart.js` as a project dependency: `npm install chart.js`.
    -   Include a client-side script (`<script>`) that fetches data from `/api/get-all-participants`, processes it into cumulative data points, and renders the chart. Adapt the logic from `nstcg-website-phase-0/js/modules/feeds-page.js`.

3.  **`HotTopics.astro`**:
    -   This component will display the AI-analyzed community concerns.
    -   It should include a loading state and then render the topics fetched from `/api/analyze-concerns`. Adapt the rendering logic and CSS from `feeds-page.js` and `feeds.css`.

4.  **`ParticipantsGrid.astro`**:
    -   This component will display the full list of participants and their comments in a grid.
    -   It needs to fetch data from `/api/get-all-participants` and dynamically render each participant card.

**Step 3.3: Assemble the Feeds Page**
- In `/src/pages/feeds.astro`, import and arrange the new feeds components within a `<Layout>` component.

**Step 3.4: Update Navigation**
- Open `/src/components/Header.astro`.
- Modify the navigation list to include a link to the new Feeds page.

```astro
// src/components/Header.astro
<ul class="nav-list">
  <li><a href={base} class="nav-link">Home</a></li>
  <li><a href={`${base}feeds`} class="nav-link">Feeds</a></li>
</ul>
// also update the mobile menu
```

---

### **Phase 4: Implement Serverless API Endpoints**

**Objective:** Recreate the backend functionality of the old website using Astro's serverless functions to supply data to the new components.

- Create the following files inside `/src/pages/api/`:

1.  **`/src/pages/api/get-all-participants.js`**:
    -   Copy the code from `nstcg-website-phase-0/api/get-all-participants.js`.
    -   This will be an Astro API endpoint. The handler should be exported as `GET`.
    -   Ensure it accesses environment variables correctly using `import.meta.env`.

2.  **`/src/pages/api/analyze-concerns.js`**:
    -   Copy the code from `nstcg-website-phase-0/api/analyze-concerns.js`.
    -   Export the handler as `GET`.
    -   This endpoint will likely require an API key for the Claude API (`ANTHROPIC_API_KEY`), which must be set as an environment variable.

- **Note on Environment Variables:**
- Create a `.env.example` file in the project root.
- Add all required environment variables from the API files (`NOTION_TOKEN`, `NOTION_DATABASE_ID`, `ANTHROPIC_API_KEY`, etc.).
- Instruct the user that a `.env` file must be created with real values for the API endpoints to work.

---

### **Phase 5: Finalization**

**Objective:** Perform final cleanup and ensure the site is ready.

**Step 5.1: Review and Refine Copy**
- Read through all the text on the new `index.astro` and `feeds.astro` pages.
- Ensure the tone is consistent with the new mission of accountability. Replace any old copy related to the expired survey with new calls to action for community members to share evidence or stories.

**Step 5.2: Final Cleanup**
- Delete any unused components from the original "Volks-Typo" theme that are no longer needed (e.g., `TableOfContents.astro`, `SEO.astro` might need adjustments or could be simplified).
- Check for and remove any dead code or unused CSS variables.

**Step 5.3: Test**
- Run `npm run dev` and thoroughly test the homepage and feeds page.
- Verify that all data is loading correctly from the API endpoints.
- Check for console errors.

After completing these steps, the agent will have successfully transformed the Astro blog theme into a targeted, data-driven website for the Swanage Traffic Alliance.